All sources of information (schedconfig, downtime calendar, etc) can be read from files.
This has several advantages: speeds up the process of running tests, ensures the input is always the same, etc.
Moreover, in order to test code while development (now and in the future), 
a series of templates and scripts to generate fake calendars have been created.
These calendars have downtimes scheduled to a fixed number of hours in the future, 
so they should always have the same effect, and therefore can be used as integration tests.
Examples of these fake calendars are (there are many more):

    * one CE, scheduled for 1 hour in the future
    
    * one CE, scheduled for 20 hours in the future
    
    * two CEs (same site), scheduled for 1 and 10 hours in the future respectively
    
    * two CEs (same site), scheduled for 1 and 1.5 hours in the future respectively
    
    * two CEs (different sites, same cloud), scheduled for 1 and 2 hours in the future respectively
    
    * one DDM, scheduled for 1 hours in the future

--------------------------------------------------------------------------------

On the another hand, to run tests in DRY-MODE,
without changing the status or queues or CEs in AGIS and without sending email notifications, 
Mock classes for those steps have been created:

    * EmailMock()
    * AGISMock()

Passing them as inputs to methods Topology.act() and Topology.notify() will do the trick.
For the daemon, this can be set by using configuration parameter 
        dryrun = True (default) 
in the config file /etc/switcher/switcher.conf

